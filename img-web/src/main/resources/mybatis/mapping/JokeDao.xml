<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.img.gen.dao.JokeDao">
	<resultMap type="com.img.gen.dao.model.Joke" id="jokeResultMap">
		<result property="jokeId" column="JOKE_ID" />
		<result property="userId" column="USER_ID" />
		<result property="jokeName" column="JOKE_NAME" />
		<result property="content" column="CONTENT" />
		<result property="createTime" column="CREATE_TIME" />
	</resultMap>
	
	<sql id="table_columns">
		JOKE_ID,
		USER_ID,
		JOKE_NAME,
		CONTENT,
		CREATE_TIME
    </sql>
	<sql id="entity_properties">
		#{jokeId},
		#{userId},
		#{jokeName},
		#{content},
		#{createTime}
	</sql>

    <!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="userId != null and userId != ''">and USER_ID = #{userId}</if>
            <if test="jokeName != null and jokeName != ''">and JOKE_NAME = #{jokeName}</if>
            <if test="content != null and content != ''">and CONTENT = #{content}</if>
            <if test="createTime != null and createTime != ''">and CREATE_TIME = #{createTime}</if>
        </trim>
    </sql>


	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.img.gen.dao.model.Joke" useGeneratedKeys="true" keyProperty="id">
		insert into joke( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>

    <insert id="insertSelective" parameterType="com.img.gen.dao.model.Joke">
        insert into joke
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null and userId != ''">USER_ID,</if>
            <if test="jokeName != null and jokeName != ''">JOKE_NAME,</if>
            <if test="content != null and content != ''">CONTENT,</if>
            <if test="createTime != null and createTime != ''">CREATE_TIME,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="jokeName != null and jokeName != ''">#{jokeName},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="createTime != null and createTime != ''">#{createTime},</if>
        </trim>
	</insert>


	<delete id="delete" parameterType="com.img.gen.dao.model.Joke">
		delete from joke
        <include refid="page_where" />
	</delete>

	<delete id="deleteByPrimaryKey" parameterType="String">
		delete from joke
		where ID = #{id}
	</delete>


	<update id="updateByPrimaryKey" parameterType="com.img.gen.dao.model.Joke">
		update joke 
		<trim prefix="set" suffixOverrides=",">
			<if test="userId != null and userId != ''">USER_ID = #{userId},</if>
			<if test="jokeName != null and jokeName != ''">JOKE_NAME = #{jokeName},</if>
			<if test="content != null and content != ''">CONTENT = #{content},</if>
			<if test="createTime != null and createTime != ''">CREATE_TIME = #{createTime},</if>
		</trim>
		<where>ID = #{id}</where>
	</update>

    <update id="updateByPrimaryKeySelective" parameterType="com.img.gen.dao.model.Joke">
        update joke
        <trim prefix="set" suffixOverrides=",">
            <if test="userId != null and userId != ''">USER_ID = #{userId},</if>
            <if test="jokeName != null and jokeName != ''">JOKE_NAME = #{jokeName},</if>
            <if test="content != null and content != ''">CONTENT = #{content},</if>
            <if test="createTime != null and createTime != ''">CREATE_TIME = #{createTime},</if>
        </trim>
        <include refid="page_where" />
    </update>


    <select id="selectAll" resultMap="jokeResultMap">
        select <include refid="table_columns" />
        from joke
    </select>

    <select id="select" resultMap="jokeResultMap">
        select <include refid="table_columns" />
        from joke
        <include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(ID) from joke
        <include refid="page_where" />
    </select>


    <select id="getByPrimaryKey" resultMap="jokeResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from joke
		where ID = #{id}
	</select>
	
	<!-- 其他自定义SQL -->


</mapper>